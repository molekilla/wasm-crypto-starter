# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on:
  pull_request: {}
  push:
    branches: develop

name: Rust

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo build --no-default-features
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --no-default-features

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release

      - name: Run cargo build --features=ecdsa
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --features=ecdsa

      - name: Run cargo build --features=ed25519
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --features=ed25519

      - name: Run cargo build --features=ed25519
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --features=ecdsa,ed25519

      - name: Run cargo build --no-default-features --features=ecdsa,ed25519,encoding,pkcs8
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --no-default-features --features=ecdsa,ed25519,encoding,pkcs8

      - name: Run cargo build --all-features
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --release --all-features

  test:
    name: Test Suite
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-cargo-test-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: test
          args: --release --lib --features=ecdsa,ed25519,test-vectors

  dalek:
    name: "Provider: ed25519-dalek"
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-dalek-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --package=signatory-dalek --benches --release

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: test
          args: --package=signatory-dalek --release

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package signatory-dalek

  ring:
    name: "Provider: ring"
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-ring-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --package=signatory-ring --benches --release

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: test
          args: --package=signatory-ring --release

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package signatory-ring

  secp256k1:
    name: "Provider: secp256k1"
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-secp256k1-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --package=signatory-secp256k1 --benches --release

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: test
          args: --package=signatory-secp256k1 --release

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package signatory-secp256k1

  sodiumoxide:
    name: "Provider: sodiumoxide"
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - 1.36.0
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-sodiumoxide-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --package=signatory-sodiumoxide --benches --release

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: test
          args: --package=signatory-sodiumoxide --release

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package signatory-secp256k1

  ledger-tm:
    name: "Provider: ledger-tm"
    strategy:
      matrix:
        toolchain:
          - stable
          - 1.36.0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-ledger-tm-${{ hashFiles('Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install libudev-dev
        run: sudo apt-get install libudev-dev

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        with:
          command: build
          args: --package=signatory-ledger-tm --release

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package signatory-ledger-tm

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-coverage-cargo-build-target-${{ hashFiles('Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        env:
          CARGO_INCREMENTAL: 0
        with:
          version: 0.11.0
          args: --all --exclude signatory-ledger-tm -- --test-threads 1

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features
